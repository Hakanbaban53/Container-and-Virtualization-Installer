name: Build, Package, and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up RPM environment
        run: sudo apt-get install -y rpm

      - name: Run RPM build script
        run: bash /home/runner/work/Virtual-CANDY/Virtual-CANDY/build_rpm_package.sh

      - name: Archive RPM
        run: tar -czvf ${{ github.ref_name }}-rpm.tar.gz ~/rpmbuild/RPMS/*/*.rpm

      - name: Upload RPM Artifact
        uses: actions/upload-artifact@v3
        with:
          name: rpm-package
          path: ${{ github.ref_name }}-rpm.tar.gz

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run DEB build script
        run: bash /home/runner/work/Virtual-CANDY/Virtual-CANDY/build_deb_package.sh

      - name: Archive DEB
        run: tar -czvf ${{ github.ref_name }}-deb.tar.gz ./*.deb

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb-package
          path: ${{ github.ref_name }}-deb.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs: [build-rpm, build-deb]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download RPM Artifact
        uses: actions/download-artifact@v3
        with:
          name: rpm-package
          path: ./

      - name: Download DEB Artifact
        uses: actions/download-artifact@v3
        with:
          name: deb-package
          path: ./

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release for tag ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload RPM to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.ref_name }}-rpm.tar.gz
          asset_name: ${{ github.ref_name }}-rpm.tar.gz
          asset_content_type: application/gzip

      - name: Upload DEB to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.ref_name }}-deb.tar.gz
          asset_name: ${{ github.ref_name }}-deb.tar.gz
          asset_content_type: application/gzip
